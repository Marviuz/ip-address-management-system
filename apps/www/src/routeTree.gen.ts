/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as AuthenticatedImport } from './routes/_authenticated';
import { Route as IndexImport } from './routes/index';
import { Route as AuthGoogleImport } from './routes/auth/google';
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/dashboard/index';

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const AuthGoogleRoute = AuthGoogleImport.update({
  id: '/auth/google',
  path: '/auth/google',
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_authenticated': {
      id: '/_authenticated';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AuthenticatedImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/google': {
      id: '/auth/google';
      path: '/auth/google';
      fullPath: '/auth/google';
      preLoaderRoute: typeof AuthGoogleImport;
      parentRoute: typeof rootRoute;
    };
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/';
      path: '/dashboard';
      fullPath: '/dashboard';
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport;
      parentRoute: typeof AuthenticatedImport;
    };
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute;
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
};

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '': typeof AuthenticatedRouteWithChildren;
  '/auth/google': typeof AuthGoogleRoute;
  '/dashboard': typeof AuthenticatedDashboardIndexRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '': typeof AuthenticatedRouteWithChildren;
  '/auth/google': typeof AuthGoogleRoute;
  '/dashboard': typeof AuthenticatedDashboardIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/_authenticated': typeof AuthenticatedRouteWithChildren;
  '/auth/google': typeof AuthGoogleRoute;
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '' | '/auth/google' | '/dashboard';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '' | '/auth/google' | '/dashboard';
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/auth/google'
    | '/_authenticated/dashboard/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren;
  AuthGoogleRoute: typeof AuthGoogleRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthGoogleRoute: AuthGoogleRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/auth/google"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/dashboard/"
      ]
    },
    "/auth/google": {
      "filePath": "auth/google.tsx"
    },
    "/_authenticated/dashboard/": {
      "filePath": "_authenticated/dashboard/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
